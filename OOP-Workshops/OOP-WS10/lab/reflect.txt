Student: Renan de Alencar Queiroz
ID: 129280236
I have done all the coding by myself and only copied the code that my professor provided to complete my workshops and assignments.

In this workshop, templates are used to create versatile and reusable components. For instance, in Collection.h, a template class Collection is defined, 
which can store a collection of any data type, such as Car, Student, or Employee. 
This template class includes methods for adding elements, resizing the collection, and accessing elements by index. 
By using templates, the Collection class can manage various data types without rewriting the class for each specific type, thus enhancing code reusability and maintainability.
Another example is in searchNlist.h, which defines template functions listArrayElements and search. 
The listArrayElements function can print elements of any array type, while the search function searches for elements in an array based on a key and stores the matches in a Collection. 
These template functions are used in main.cpp to handle arrays of Car, Student, and Employee objects. 
By using templates, these functions can operate on different data types without duplicating the logic.
Overall, templates in C++ promote code reusability, reduce redundancy, and ensure type safety, making the code more flexible and easier to maintain. 
They allow developers to write generic and efficient code that works seamlessly with various data types.